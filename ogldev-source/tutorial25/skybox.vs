#version 330                                                                        
                                                                                    
layout (location = 0) in vec3 Position;                                             
                                                                                    
uniform mat4 gWVP;                                                                  
                                                                                    
out vec3 TexCoord0;                                                                 

//虽然我们仍然是将输入的位置向量使用WVP矩阵进行变换，但是传给片段着色器的位置向量中的Z分量我们改成了W分量，
//这样会有什么结果呢？顶点着色器之后，光栅器将获得gl_Position向量，并进行透视分割以完成投影变换(将各分量除以W分量)。
//我们将Z分量设置成W分量的值可以保证透视分割后位置向量最终的Z分量值为1.0。Z分量为1意味着永远处于Z轴最远处，
//在深度测试中相对于其他物体模型天空盒子将永远处于劣势，因此天空盒子就总是作为其他物体的背景了，而其他物体会一直渲染在背景前面，这也是我们想要的效果。 


//我们使用天空盒子自身坐标系中顶点的原始坐标来作为3D纹理坐标。为什么这样合理呢？因为对cubemap纹理采样时是从中心发射一个向量到立方体盒子或者球面上的，
//因此盒子表面上点的坐标恰好就是纹理坐标。顶点着色器将物体自身坐标系中的顶点坐标作为纹理坐标创给片段着色器(立方体是有8个顶点的，球体会有更多)，
//然后光栅器会在顶点之间差值得到每个像素的位置，从而就可以利用每个像素的位置进行采样了。                                                                                   
void main()                                                                         
{                                                                                   
    vec4 WVP_Pos = gWVP * vec4(Position, 1.0);                                      
    gl_Position = WVP_Pos.xyww;                                                     
    TexCoord0   = Position;                                                         
}
